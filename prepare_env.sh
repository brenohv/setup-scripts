#!/bin/bash
set -euo pipefail

echo "=== üöÄ INICIANDO PREPARA√á√ÉO DO AMBIENTE GigaLearnCPP ==="

# ===== VARI√ÅVEIS =====
REPO="brenohv/GigaLearnCPP-Leak"
APP_ROOT="/app"
REPO_DIR="$APP_ROOT/GigaLearnCPP-Leak"
GIGA_DIR="$REPO_DIR/GigaLearnCPP"
LIBTORCH_URL="https://download.pytorch.org/libtorch/cu128/libtorch-shared-with-deps-2.9.0%2Bcu128.zip"
LIBTORCH_TMP="/tmp/libtorch.zip"
GIT_USER_NAME="brenohv"
GIT_USER_EMAIL="brenohenriquev8@gmail.com"

# ===== 1. CORRIGIR DNS E TESTAR CONEX√ÉO =====
echo "üîß Verificando conectividade de rede..."
if ! ping -c1 1.1.1.1 &>/dev/null; then
  echo "‚ö†Ô∏è  Sem acesso √† internet. Tentando novamente em 5s..."
  sleep 5
fi

if ! ping -c1 1.1.1.1 &>/dev/null; then
  echo "‚ùå Sem conex√£o com a internet. Verifique a rede do container."
  exit 1
fi

if ! nslookup github.com &>/dev/null; then
  echo "‚ö†Ô∏è  Corrigindo DNS..."
  rm -f /etc/resolv.conf
  echo "nameserver 1.1.1.1" > /etc/resolv.conf
  echo "nameserver 8.8.8.8" >> /etc/resolv.conf
fi

# ===== 2. ATUALIZAR E INSTALAR PACOTES =====
export DEBIAN_FRONTEND=noninteractive
apt-get update -y
apt-get install -y build-essential cmake git wget unzip python3.11 python3.11-dev python3-pip ca-certificates rsync dnsutils

# ===== 3. DEFINIR PYTHON 3.11 COMO PADR√ÉO =====
update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 || true
python3 -m pip install --upgrade pip

# ===== 4. INSTALAR DEPEND√äNCIAS PYTHON =====
python3 -m pip install --upgrade wandb pydantic --target=/usr/local/lib/python3.11/dist-packages

# ===== 5. CONFIGURAR GIT =====
git config --global user.name "$GIT_USER_NAME"
git config --global user.email "$GIT_USER_EMAIL"
git config --global init.defaultBranch main

# ===== 6. VERIFICAR TOKEN =====
if [ -z "${GITHUB_TOKEN:-}" ]; then
    echo "‚ùå ERRO: GITHUB_TOKEN n√£o definido. Configure-o nas vari√°veis de ambiente do Vast.ai."
    exit 1
fi

# ===== 7. CLONAR OU ATUALIZAR REPOSIT√ìRIO =====
mkdir -p "$APP_ROOT"
cd "$APP_ROOT"

if [ -d "$REPO_DIR/.git" ]; then
    echo "üì¶ Reposit√≥rio j√° existe, atualizando..."
    cd "$REPO_DIR"
    git config --global --add safe.directory "$REPO_DIR"
    git pull --rebase origin main || true
    git submodule update --init --recursive || true
else
    echo "‚¨áÔ∏è  Clonando reposit√≥rio privado..."
    git clone --recurse-submodules "https://${GITHUB_TOKEN}@github.com/${REPO}.git" "$REPO_DIR"
    cd "$REPO_DIR"
    git submodule update --init --recursive || true
fi

git remote set-url origin "https://${GITHUB_TOKEN}@github.com/${REPO}.git"

# ===== 8. BAIXAR LIBTORCH =====
mkdir -p "$GIGA_DIR"
cd "$GIGA_DIR"
echo "‚¨áÔ∏è  Baixando libtorch..."
wget -q -O "$LIBTORCH_TMP" "$LIBTORCH_URL"
rm -rf "$GIGA_DIR/libtorch"
unzip -q "$LIBTORCH_TMP" -d "$GIGA_DIR"
rm -f "$LIBTORCH_TMP"

# ===== 9. FINAL =====
echo "‚úÖ Setup completo!"
echo "üìÅ Reposit√≥rio: $REPO_DIR"
echo "‚öôÔ∏è  libtorch: $GIGA_DIR/libtorch"
echo "üêç Python vers√£o: $(python3 --version)"
echo "üåê GitHub Token autenticado para: $REPO"
